/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import GroovyScripting.EmbeddedGroovy;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.EditorKit;
import jsyntaxpane.DefaultSyntaxKit;
import jsyntaxpane.SyntaxDocument;
import jsyntaxpane.Token;
import jsyntaxpane.actions.ActionUtils;
import jsyntaxpane.actions.CaretMonitor;

public class ScriptingUI extends javax.swing.JFrame {

    /**
     * Creates new form Tester
     */
    public ScriptingUI() {
        // this is a test for adding regex lexer.  It wont work unless the
        // JavaRegex.properties is found in the classpath
        // DefaultSyntaxKit.registerContentType("text/aa_regex", "jsyntaxpane.JavaRegexKit");
        initComponents();
        jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit.getContentTypes()));
        //System.out.println(DefaultSyntaxKit.getContentTypes().toString());
        jEdtTest.setContentType(jCmbLangs.getItemAt(0).toString());
        jCmbLangs.setSelectedItem("text/groovy");
        new CaretMonitor(jEdtTest, lblCaretPos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="UI Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        menu = new JMenu("File");
        lblCaretPos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEdtTest = new javax.swing.JEditorPane();
        lblToken = new javax.swing.JLabel();
        jCmbLangs = new javax.swing.JComboBox();
        jToolBar1 = new javax.swing.JToolBar();
        testButton = new javax.swing.JButton();
        menuLabel = new JLabel("File");

        saveMenu = new JMenuItem("Save",
                KeyEvent.VK_S);
        saveMenu.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_S, ActionEvent.ALT_MASK));

        openMenu = new JMenuItem("Open",
                KeyEvent.VK_O);
        openMenu.setAccelerator(KeyStroke.getKeyStroke(
                KeyEvent.VK_O, ActionEvent.ALT_MASK));

        saveMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                saveAndLoad(e);
            }
        });

        openMenu.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                saveAndLoad(e);
            }
        });

        testButton.setText("Test Groovy");
        testButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                testGroovy();
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Script IDE");

        lblCaretPos.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCaretPos.setText("Caret Position");

        jEdtTest.setContentType("");
        jEdtTest.setFont(new java.awt.Font("Monospaced", 0, 13));
        jEdtTest.setCaretColor(new java.awt.Color(153, 204, 255));
        jEdtTest.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jEdtTestCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(jEdtTest);

        lblToken.setFont(new java.awt.Font("Courier New", 0, 12));
        lblToken.setText("Token under cursor");

        jCmbLangs.setMaximumRowCount(20);
        jCmbLangs.setFocusable(false);
        jCmbLangs.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCmbLangsItemStateChanged(evt);
            }
        });

        jToolBar1.setRollover(true);
        jToolBar1.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCmbLangs, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 441, Short.MAX_VALUE)
                        .addComponent(lblCaretPos, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblToken, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                        .addGap(484, 484, 484))
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblToken, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCaretPos, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                                .addComponent(jCmbLangs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(testButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
        );

        pack();
    }// </editor-fold>END:initComponents

// <editor-fold desc="jEdtTestCaretUpdate">
    private void jEdtTestCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jEdtTestCaretUpdate
        SyntaxDocument sDoc = ActionUtils.getSyntaxDocument(jEdtTest);
        if (sDoc != null) {
            Token t = sDoc.getTokenAt(evt.getDot());
            if (t != null) {
                CharSequence tData = t.getText(sDoc);
                if (t.length > 40) {
                    tData = tData.subSequence(0, 40);
                }
                lblToken.setText(t.toString() + ": " + tData);
            } else {
                // null token, remove the status
                lblToken.setText("NO Token at cursor");
            }
        }

    }//</editor-fold>

    private void testGroovy() {
        new EmbeddedGroovy(jEdtTest.getText());
    }

    public void saveGroovy() {

    }

    private void jCmbLangsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCmbLangsItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String lang = jCmbLangs.getSelectedItem().toString();

            // save the state of the current JEditorPane, as it's Document is about
            // to be replaced.
            String oldText = jEdtTest.getText();

            // install a new DefaultSyntaxKit on the JEditorPane for the requested language.
            jEdtTest.setContentType(lang);
            // Recreate the Toolbar
            jToolBar1.removeAll();
            EditorKit kit = jEdtTest.getEditorKit();
            if (kit instanceof DefaultSyntaxKit) {
                jToolBar1.add(openMenu);
                jToolBar1.add(saveMenu);
                DefaultSyntaxKit defaultSyntaxKit = (DefaultSyntaxKit) kit;
                defaultSyntaxKit.addToolBarActions(jEdtTest, jToolBar1);
            }
            jToolBar1.validate();
            try {
                // setText should not be called (read the JavaDocs).  Better use the read
                // method and create a new document.
                jEdtTest.read(new StringReader(oldText), lang);
            } catch (IOException ex) {
                Logger.getLogger(ScriptingUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jEdtTest.requestFocusInWindow();
    }//GEN-LAST:event_jCmbLangsItemStateChanged

    /**
     * @param args the command line arguments
     */
    public void ide() {

        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                try {
                    DefaultSyntaxKit.initKit();
                    new ScriptingUI().setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                    System.exit(2);
                }
            }
        });
    }

    public void saveAndLoad(ActionEvent e) {
        String cmd = ((AbstractButton) e.getSource()).getText();
        try {
                JFileChooser c = new JFileChooser(new File("."));
                FileNameExtensionFilter filter = new FileNameExtensionFilter(
                        "Groovy & Java Files", "Groovy", "Java");
                c.setFileFilter(filter);
            if (cmd.equals("Open")) {
                int rVal = c.showOpenDialog(this);
                if (rVal == JFileChooser.APPROVE_OPTION) {
                    FileReader in = new FileReader(c.getSelectedFile());
                    char[] buffer = new char[1024];
                    int n = in.read(buffer);
                    String text = new String(buffer, 0, n);
                    jEdtTest.setText(text);
                    in.close();
                }

            } else if (cmd.equals("Save")) {
                int rVal = c.showSaveDialog(this);
                if (rVal == JFileChooser.APPROVE_OPTION) {
                    FileWriter out = new FileWriter(c.getSelectedFile());
                    out.write(jEdtTest.getText());
                    out.close();
                }
            }
        } catch (Exception f) {
            f.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JMenu menu;
    JLabel menuLabel;
    private JMenuItem saveMenu, openMenu;
    private javax.swing.JButton testButton, saveButton;
    private javax.swing.JComboBox jCmbLangs;
    private javax.swing.JEditorPane jEdtTest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCaretPos, lblToken;
    // End of variables declaration//GEN-END:variables
}
